jobs:
  nixCI:
    name: Nix CI
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}\nsubstituters = https://cache.nixos.org/ https://nix-community.cachix.org https://cache.iog.io https://deemp.cachix.org \ntrusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= deemp.cachix.org-1:9shDxyR2ANqEPQEEYDL/xIOnoPwxHot21L5fiZnFL18=\nstore = auto\nkeep-outputs = true\nkeep-derivations = true\n"
          install_url: https://releases.nixos.org/nix/nix-2.16.1/install
      - name: Restore and cache Nix store
        uses: actions/cache@v3
        with:
          key: nix-${{ matrix.os }}-cachix-${{ hashfiles('**/flake.nix', '**/flake.lock') }}
          path: /tmp/nix-cache
          restore-keys: |
            nix-${{ matrix.os }}-cachix-${{ hashfiles('**/flake.nix', '**/flake.lock') }}
            nix-${{ matrix.os }}-cachix-
      - name: Import /nix/store cache
        run: |
          nix-store --import < /tmp/nix-cache || echo "no cache found :("
          find /nix/store -maxdepth 1 -name '*-*' | xargs -I {} sudo touch -at 197004020402 {}
          # for compatibility with macOS
          nix profile install nixpkgs#coreutils-prefixed
      - if: matrix.os == 'ubuntu-20.04'
        name: Config git for github-actions
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      - if: matrix.os == 'ubuntu-20.04'
        name: Update flake locks
        run: |
          git pull --rebase --autostash

          nix run .#updateLocks

          git commit -a -m "action: Update flake locks" && git push || echo ""
      - name: Log in to Cachix
        run: |
          nix build nixpkgs#cachix
          nix run nixpkgs#cachix -- authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}
      - env:
          CACHIX_CACHE: ${{ secrets.CACHIX_CACHE }}
        name: Push flakes to Cachix
        run: |+
          nix run .#pushToCachix

      - name: Export /nix/store cache
        run: |
          TIME=$(gdate --date="1970-04-02 04:02" +%s)
          gls /nix/store -l --time-style +%s --time=atime | \
            awk -v t="$TIME" '{ if ($6 > t) printf "/nix/store/%s\n", $7 }' > /tmp/working-set
          nix-store --export $(cat /tmp/working-set) > /tmp/nix-cache
    strategy:
      matrix:
        os:
          - macos-11
          - macos-12
          - ubuntu-20.04
          - ubuntu-22.04
name: Nix CI
"on":
  pull_request: {}
  push: {}
  schedule:
    - cron: 0 0 1 * *
  workflow_dispatch: {}
